stages:
  - build
  - update-cd-repo-dev
  - update-cd-repo-prod

### default build with short-SHA as tag with kaniko
build-image:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"
  rules:
    - if: $CI_COMMIT_BRANCH  == "main"


### runs on every commit on the main branch
update-dev:
  stage: update-cd-repo-dev
  image: alpine:3.8
  before_script:
    - apk add --no-cache git
    - git config --global user.email "gitlab@gitlab.com"
    - git config --global user.name "GitLab CI"
  script:
    - git clone https://${CI_USERNAME}:${CI_PUSH_TOKEN}@gitlab.com/fivehanz/lms-cd-files.git
    - cd lms-cd-files/dev
    # replaces hash with hash
    - sed -E -i "s|${CI_REGISTRY_IMAGE}:[A-Za-z0-9]+|${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}|g" ./lms-deployment.yaml
    - git commit -am "DEV image update ${CI_COMMIT_SHORT_SHA}"
    - git push origin main
  environment: development
  rules:
    - if: $CI_COMMIT_BRANCH  == "main"

### runs only if commit tag is present and started manually.
update-production:
  stage: update-cd-repo-prod
  image: alpine:3.8
  before_script:
    - apk add --no-cache git
    - git config --global user.email "gitlab@gitlab.com"
    - git config --global user.name "GitLab CI"
  script:
    - git clone https://${CI_USERNAME}:${CI_PUSH_TOKEN}@gitlab.com/fivehanz/lms-cd-files.git
    - cd lms-cd-files/prod
    # replaces tag with string
    - sed -E -i "s|${CI_REGISTRY_IMAGE}:[A-Za-z0-9]+|${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}|g" ./lms-deployment.yaml
    - git commit -am "PROD image update ${CI_COMMIT_SHORT_SHA}"
    - git push origin main
  environment: production
  rules:
    - if: $CI_COMMIT_BRANCH  == "main"
  when: manual
